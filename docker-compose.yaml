services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wbservice
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - CONFIG_PATH=/app/config.yaml
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=17051989
      - DB_NAME=postgres
      - RABBIT_URL=amqp://guest:guest@rabbitmq:5672/
    volumes:
      - ./config.yaml:/app/config.yaml
    entrypoint: ["sh", "-c", "sleep 1 && ./myapp"]

  postgres:
    image: postgres:14
    container_name: wb-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 17051989
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  rabbitmq:
    image: heidiks/rabbitmq-delayed-message-exchange:3.11.28-management
    container_name: wb-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  pgdata:
    driver: local
